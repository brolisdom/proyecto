const { Router } = require('express')
const { unlink } = require('fs-extra')
const { isAuth } = require('../auth')

const pdf = require('html-pdf');
const path = require('path')
const router = Router()

const User = require('../models/User')
const Robot = require('../models/Robot')
const Member = require('../models/Member')

router.get('/voucher/:id', isAuth, async(req, res) => {
    const robot = await Robot.findById(req.params.id)
    if(robot){
        const user = await User.findById(robot._leader)
        if(robot._captain.value == 'Líder') robot._captain.value = user._name
        if(robot._member1.value == 'Líder') robot._member1.value = user._name
        if(robot._member2.value == 'Líder') robot._member2.value = user._name
        if(robot._member3.value == 'Líder') robot._member3.value = user._name
        const content = `
        <!DOCTYPE html>
        <html lang="es">
        <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <link href="https://fonts.googleapis.com/css2?family=Play:wght@400;700&display=swap" rel="stylesheet">
        <title>Document</title>
        <style>
        * {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
            font-family: 'Play';
            font-style: normal;
          }
          body {
            overflow: hidden;
          }
          .container {
            position: absolute;
            display: block;
            width: 100%;
            height: 100%;
            padding: 1cm 1cm;
          }
          .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            overflow: hidden;
          }
          .header svg {
            position: absolute;
            margin-left: 0.5cm;
          }
          .header p {
            font-size: 26px;
            letter-spacing: 10px;
            text-align: right;
            color: #5D2ABC;
            font-weight: 700;
            margin-left: 40%;
            margin-top: 20px;
          }
          .header p span {
            font-size: 14px;
            display: block;
          }
          .content {
            width: 100%;
            margin-top: 75px;
            display: block;
          }
          .content table {
            border-collapse: separate;
            border-spacing: 20px 0px;
          }
          .content table tr td {
            padding: 20px 0px;
            padding-bottom: 30px;
            border-top: 1px solid #CCCCCC;
          }
          .content table tr td p {
            color: #9E7FD7;
            font-size: 14px;
            letter-spacing: 5px;
          }
          .content table tr td p.footer {
            color: #777;
            font-size: 14px;
            letter-spacing: 0px;
            margin-bottom: 10px;
            text-align: center;
          }
          .content table tr td .qr {
            display: block;
            width: 100px;
            height: 100px;
            background: #ccc;
            margin: auto;
          }
          .content table tr td span {
            color: #5D2ABC;
            font-size: 24px;
            letter-spacing: 2px;
            display: block;
          }
          .content .pie-pag tr td {
            padding: 15px 0px;
            font-size: 14px;
          }
            </style>
        </head>
        <body>
        <div class="container">
    <div class="header">
    <svg width="197" height="93" viewBox="0 0 197 93" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M12.168 2.25C9.62109 4.16406 8.33594 5.28516 8.33594 5.56641C8.33594 5.94531 8.96484 7.13281 10.7266 10.1133C11.582 11.5586 12.4062 12.9844 12.5469 13.2773L12.8242 13.8125L11.9844 15.7969C11.5391 16.8906 10.9648 18.207 10.7148 18.7109L10.2773 19.6484L6.61328 20.2227C0.695311 21.1719 1.19922 21.0625 1.04687 21.4531C0.906249 21.8164 0.86328 28.2148 1.0039 28.7031C1.0625 28.9414 1.39453 29.0703 2.92187 29.4453C7.00781 30.4531 10.3086 31.3359 10.5039 31.4883C10.6992 31.6289 12.9492 36.7812 12.9492 37.0742C12.9492 37.1445 11.7617 38.6836 10.3203 40.5195C6.86719 44.8711 6.99219 44.6641 7.23047 45.125C7.55078 45.7266 12.4766 50.6133 12.7852 50.6133C12.9219 50.6133 13.918 50.0391 14.9922 49.3359C16.0547 48.625 17.9023 47.4336 19.0781 46.6641L21.2187 45.2773L24.2109 46.5664C26.6172 47.5898 27.2344 47.8945 27.2891 48.1328C27.543 49.168 29.3594 56.7578 29.4141 57.0234C29.457 57.2031 29.6406 57.3711 29.8477 57.4297C30.4102 57.5703 37.3203 57.3594 37.4883 57.1914C37.5703 57.1055 38.0469 54.9375 38.5781 52.3477C39.0977 49.7578 39.5312 47.6289 39.5586 47.6016C39.6289 47.5469 45.168 45.4023 45.418 45.3359C45.5469 45.293 46.8477 46.0352 48.3555 47.0156C52.457 49.6328 53.7578 50.375 54.1328 50.2773C54.4844 50.1914 55.3516 49.1562 56.9609 46.9023C58.5 44.7305 58.5273 44.6758 58.1914 44.1992C58.0352 43.9922 56.3008 42.3242 54.3438 40.5039L50.7891 37.1875L50.7227 28.8594C50.6523 20.6836 50.6523 20.5312 50.3555 20.1367C49.7969 19.3828 50.0195 19.3945 40.957 19.3945C31.7656 19.3945 32.0312 19.3672 31.4727 20.1953C31.2344 20.5586 31.207 20.8789 31.207 24.3242C31.207 29.6133 30.8984 29.3359 36.7031 29.3359H40.6484V32.9609L40.2578 33.2383C39.5 33.7734 37.8633 34.5156 36.9141 34.75C35.4727 35.1016 32.5625 35.0586 30.9258 34.668C27.9062 33.9414 25.7656 32.3008 24.5625 29.8242C23.6953 28.0312 23.3867 26.6484 23.4023 24.5039C23.4141 20.8086 24.4766 18.0508 26.7305 15.7969C27.6797 14.8594 28.1133 14.5508 29.1914 14.0352C31.9883 12.6914 34.8867 12.5234 37.9648 13.543C39.3906 14.0195 40.4961 14.6367 41.7539 15.6602C42.7344 16.4414 43.2773 16.668 43.9492 16.5273C44.3711 16.457 44.875 16.0078 46.9297 13.9219C48.3281 12.4805 49.4766 11.1914 49.5859 10.9258C50.0195 9.84766 49.4336 8.95312 47.1797 7.20312C42.4687 3.55078 36.6055 2.12109 30.5078 3.14453C27.6133 3.62109 23.5547 4.71094 21.9023 5.45312C21.7656 5.51172 20.8125 5.00781 19.1758 3.98438C15.8906 1.94141 14.1836 0.917969 14.043 0.917969C13.9844 0.917969 13.1484 1.51953 12.168 2.25ZM17.8477 4.15234C20.6016 5.85937 21.5664 6.39062 21.8047 6.33594C21.9727 6.29297 23.0234 5.94531 24.1406 5.55078C26.4375 4.76953 29.2461 4.125 31.8359 3.77344C35.7539 3.25781 39.7383 3.95703 43.3906 5.78906C45.9102 7.0625 48.9023 9.47266 48.9023 10.2148C48.9023 10.6484 47.7266 12.0039 45.4453 14.2461C44.3008 15.3789 43.8086 15.7578 43.543 15.7578C43.3203 15.7578 42.8867 15.5039 42.3828 15.0703C40.7891 13.7109 38.8008 12.7617 36.6055 12.3281C35.0117 12.0039 32.2148 12.1016 30.7187 12.5352C26.4375 13.7695 23.6094 17.1406 22.7422 22.043C22.5195 23.3008 22.5469 26.0039 22.8008 27.1641C23.3437 29.6836 24.0859 31.1133 25.6953 32.7227C26.7148 33.7422 27.1094 34.0234 28.2109 34.5547C29.7656 35.2969 30.9414 35.6055 32.8984 35.7734C35.543 36.0117 38.1328 35.5078 39.9062 34.4141C41.5859 33.3789 41.418 33.7422 41.418 31.1523C41.418 29.082 41.3906 28.8711 41.1523 28.6914C40.9297 28.5352 40.0898 28.4961 36.7734 28.4961H32.6602L32.3242 28.1445L31.9766 27.8086V24.3945C31.9766 21.1445 31.9883 20.9492 32.2695 20.6016L32.5508 20.2344H40.9414C49.1406 20.2344 49.3203 20.2344 49.6016 20.5156C49.8828 20.7969 49.8828 20.9766 49.8828 29.1094V37.4375L50.2031 37.7734C50.3711 37.957 51.7422 39.2578 53.2383 40.6445C54.7344 42.0313 56.3008 43.5156 56.7227 43.9336L57.4766 44.7031L56.6641 45.8789C55.4063 47.6719 54.0781 49.3516 53.8945 49.3516C53.6875 49.3516 51.6562 48.1328 48.4961 46.1055C47.0703 45.1953 45.7813 44.4531 45.6445 44.4531C45.25 44.4531 39.2227 46.8047 38.9688 47.0547C38.8438 47.1836 38.4102 49.043 37.8516 51.8438L36.9297 56.4219L36.3672 56.5195C36.0742 56.5742 34.5508 56.6172 33.0117 56.6172L30.1836 56.6289L29.9062 55.5391C29.75 54.9492 29.2617 52.9219 28.8281 51.0312C28.1836 48.2461 27.9766 47.5469 27.7109 47.3086C27.2187 46.8477 21.3711 44.4102 21.0234 44.5078C20.8555 44.5508 18.9531 45.7383 16.7969 47.168L12.8828 49.7422L10.8789 47.7578C9.77734 46.6797 8.68359 45.543 8.44531 45.25L8.02734 44.7305L10.9102 41.1211C12.9375 38.5859 13.7891 37.4258 13.7891 37.1719C13.7891 36.8359 12.0703 32.582 11.4258 31.3086C11.0781 30.6367 11.4414 30.7773 5.78906 29.3359L1.76172 28.3125V21.832L3.83203 21.5078C9.07812 20.6992 10.6133 20.3906 10.8672 20.1367C11.1328 19.8711 12.4609 16.918 13.2305 14.8867L13.6914 13.6836L13.2578 12.8594C13.0352 12.4102 12.1406 10.8711 11.2852 9.42969C10.4453 7.98828 9.60937 6.55859 9.45312 6.23828L9.17578 5.67969L11.1602 4.09766C13.4414 2.28906 13.957 1.91406 14.1133 1.89844C14.168 1.89844 15.8477 2.92187 17.8477 4.15234Z" fill="#5D2ABC"/>
    <path d="M86.3086 18.5547C86.1406 18.6133 85.875 18.8516 85.707 19.0586L85.4141 19.4375L85.4414 32.582L85.4844 45.7383L86.2656 46.4102H96.1992C103.055 46.4102 106.227 46.3711 106.426 46.2578C106.969 45.9648 107.094 45.3203 107.094 42.7305C107.094 41.3594 107.027 40.1133 106.941 39.8594C106.633 38.9805 106.801 38.9922 99.543 38.9922H92.9688V36.1953H99.1914C105.852 36.1953 106.031 36.1797 106.395 35.5078C106.48 35.3398 106.535 34.0937 106.535 32.4844V29.7266L105.723 28.9141H92.9688V25.9766H99.4453C105.656 25.9766 105.922 25.9609 106.367 25.6953C106.621 25.5391 106.887 25.2461 106.969 25.0352C107.055 24.8008 107.094 23.582 107.066 21.957L107.027 19.2578L106.633 18.8789L106.258 18.4844L96.4219 18.457C91.0234 18.4453 86.4609 18.4844 86.3086 18.5547ZM106.031 19.4805C106.215 19.6602 106.258 20.1094 106.258 22.1953C106.258 24.2812 106.215 24.7305 106.031 24.9102C105.836 25.1055 105.039 25.1367 99.2773 25.1367C93.8633 25.1367 92.6992 25.1641 92.4648 25.332C92.2266 25.5117 92.1992 25.7383 92.1562 27.2344C92.1133 28.6055 92.1406 29 92.3242 29.2656L92.5469 29.6133H98.9102C105.094 29.6133 105.289 29.6289 105.559 29.8945C105.809 30.1445 105.836 30.3555 105.836 32.457C105.836 34.2891 105.793 34.793 105.613 35.0469L105.402 35.3555H99.0664C93.8359 35.3555 92.6875 35.3828 92.4648 35.5508C92.2383 35.7305 92.1992 35.957 92.1562 37.3828C92.1133 38.6992 92.1406 39.0781 92.3242 39.3438L92.5469 39.6914H99.0234C103.949 39.6914 105.57 39.7344 105.836 39.875L106.188 40.0586L106.227 42.6328C106.27 45.1367 106.258 45.2344 105.961 45.4609C105.684 45.6992 105.012 45.7109 96.2695 45.7109C87.9883 45.7109 86.8398 45.6836 86.5586 45.4883L86.2539 45.2773V32.4297C86.2539 22.6289 86.293 19.5508 86.4219 19.4258C86.5469 19.2969 88.9102 19.2578 96.1992 19.2578C104.758 19.2578 105.836 19.2852 106.031 19.4805Z" fill="#5D2ABC"/>
    <path d="M112.172 18.6836C111.937 18.8359 111.684 19.1563 111.586 19.4102C111.375 20.0117 111.363 44.7031 111.57 45.4453C111.824 46.3555 112.035 46.4102 115.277 46.4102C118.523 46.4102 118.734 46.3555 118.984 45.4453C119.055 45.168 119.125 43.418 119.125 41.5391V38.1523H121.574L125 42.0859C126.891 44.2578 128.555 46.1055 128.707 46.2148C128.918 46.3711 129.703 46.4102 132.387 46.4102C135.785 46.4102 135.785 46.4102 136.121 46.0742C136.555 45.6406 136.695 44.8594 136.457 44.2422C136.348 43.9766 134.906 42.2422 133.254 40.3945C131.605 38.5313 130.234 36.9648 130.219 36.9219C130.191 36.8672 130.539 36.6406 130.988 36.4023C133.941 34.8789 135.785 30.707 135.215 26.8867C134.695 23.4844 132.934 21.0352 129.969 19.6055C127.828 18.5703 127.547 18.543 119.617 18.4844C112.957 18.4297 112.594 18.4453 112.172 18.6836ZM127.84 19.6484C130.945 20.5156 133.281 22.7539 134.148 25.6953C134.484 26.8164 134.582 28.6641 134.375 29.8945C133.926 32.5977 132.484 34.6953 130.246 35.8594C129.437 36.2773 129.168 36.6563 129.336 37.1016C129.395 37.2578 130.863 38.9805 132.609 40.9375C135.156 43.793 135.773 44.5625 135.773 44.8711C135.773 45.6406 135.465 45.7109 132.344 45.6992C130.805 45.6992 129.449 45.6563 129.324 45.6016C129.199 45.543 127.504 43.668 125.547 41.4414L121.992 37.3828L120.398 37.3398C118.117 37.2852 118.285 36.9492 118.285 41.5273C118.285 45.2344 118.285 45.2773 117.98 45.4883C117.727 45.6719 117.211 45.7109 115.277 45.7109C113.348 45.7109 112.832 45.6719 112.578 45.4883L112.27 45.2773V32.5273C112.27 20.668 112.285 19.7461 112.508 19.5078C112.746 19.2422 113.027 19.2422 119.754 19.2852C126.414 19.3398 126.805 19.3555 127.84 19.6484Z" fill="#5D2ABC"/>
    <path d="M118.512 25.2188C118.176 25.5547 118.176 31.168 118.512 31.5039C118.719 31.6992 119.168 31.7266 122.469 31.6875C126.008 31.6445 126.219 31.6289 126.777 31.3359C128.68 30.3125 129.102 27.7109 127.633 26.0469C126.777 25.0781 126.316 24.9961 122.188 24.9961C119.223 24.9961 118.691 25.0234 118.512 25.2188ZM126.328 26.1133C127.238 26.5625 127.66 27.2773 127.66 28.3555C127.66 29.4336 127.238 30.1445 126.328 30.5938C125.66 30.9297 125.52 30.9453 122.387 31L119.125 31.043V25.668L122.387 25.7227C125.52 25.7656 125.66 25.7773 126.328 26.1133Z" fill="#5D2ABC"/>
    <path d="M140.18 18.5547C140.023 18.6133 139.773 18.8086 139.621 18.9766C139.34 19.2852 139.34 19.5078 139.297 32.2617C139.27 41.8086 139.312 45.3203 139.422 45.6133C139.746 46.3711 139.914 46.4102 143.09 46.4102H146.012L146.418 46.0078L146.824 45.6016V38.1523H149.328L152.293 41.5391C153.93 43.418 155.582 45.2773 155.973 45.6719L156.672 46.4102H163.441L163.875 46.0469C164.27 45.7266 164.309 45.6133 164.309 44.8711V44.0586L161.16 40.5195C159.426 38.5742 158.016 36.9492 158.016 36.9062C158.016 36.8672 158.406 36.6133 158.895 36.3477C160.562 35.4219 161.832 33.8281 162.574 31.6875C163.078 30.2852 163.203 27.5 162.855 25.918C162.031 22.25 159.035 19.4531 155.105 18.6953C154.152 18.5156 140.598 18.3867 140.18 18.5547ZM154.336 19.4102C157.512 19.8438 160.125 21.6211 161.359 24.1953C162.043 25.6406 162.266 26.6484 162.266 28.4258C162.254 30.0352 162.016 31.125 161.344 32.5117C160.77 33.7148 159.258 35.2539 158.113 35.8281C157.246 36.2617 156.965 36.5977 157.105 37.0469C157.16 37.2031 158.477 38.7539 160.016 40.5039C163.527 44.4531 163.609 44.5508 163.609 44.8867C163.609 45.0273 163.484 45.2773 163.332 45.4336C163.066 45.6992 162.867 45.7109 160.113 45.7109H157.176L156.77 45.3203C156.547 45.1094 155.035 43.4023 153.398 41.5117C151.762 39.6211 150.25 37.9141 150.027 37.6914C149.637 37.3281 149.566 37.3125 148.109 37.3125C147.02 37.3125 146.516 37.3711 146.32 37.5078C146.066 37.707 146.055 37.9297 146.012 41.5391C145.984 44.9141 145.941 45.375 145.746 45.5312C145.367 45.8086 140.824 45.7813 140.418 45.4883L140.109 45.2773V32.4141C140.109 20.3047 140.121 19.5352 140.359 19.4102C140.695 19.2148 152.895 19.2148 154.336 19.4102Z" fill="#5D2ABC"/>
    <path d="M146.207 25.3047C146.027 25.5703 145.984 26.0742 145.984 28.3672C145.984 30.7891 146.012 31.1523 146.234 31.4219C146.473 31.7266 146.531 31.7266 150.18 31.6875C153.816 31.6445 153.902 31.6445 154.586 31.293C155.441 30.875 156.141 29.9102 156.281 28.9688C156.488 27.543 155.777 26.0039 154.629 25.3867C154.055 25.0781 153.875 25.0664 150.223 25.0234L146.434 24.9805L146.207 25.3047ZM154.098 26.0742C155.035 26.5508 155.426 27.207 155.426 28.3555C155.426 29.5039 155.035 30.1602 154.098 30.6367C153.512 30.918 153.246 30.9453 150.152 30.9844L146.824 31.043V25.668L150.152 25.7227C153.258 25.7656 153.512 25.7773 154.098 26.0742Z" fill="#5D2ABC"/>
    <path d="M176.492 18.6523C176.031 18.8906 175.738 19.5078 170.227 31.7852C165.051 43.3047 164.449 44.7188 164.504 45.2227C164.547 45.6016 164.688 45.8789 164.938 46.0898C165.289 46.3984 165.387 46.4102 168.438 46.4102C171.484 46.4102 171.582 46.3984 171.918 46.0898C172.117 45.9219 172.688 44.8984 173.18 43.8242L174.074 41.8633L179.727 41.8359L185.363 41.793L186.273 43.8359C186.805 45.0664 187.309 45.9766 187.504 46.1445C187.824 46.3828 188.105 46.4102 190.984 46.4102H194.133L194.539 46.0078C194.832 45.6992 194.945 45.4609 194.945 45.082C194.945 44.4258 183.781 19.3672 183.25 18.8359C182.914 18.4844 182.902 18.4844 179.934 18.4453C177.32 18.4141 176.914 18.4453 176.492 18.6523ZM182.746 19.4258C182.871 19.5937 193.938 44.2969 194.148 44.9141C194.203 45.0664 194.133 45.2656 193.965 45.4336C193.715 45.6836 193.488 45.7109 191.113 45.7109C189.684 45.7109 188.383 45.6562 188.203 45.5859C187.965 45.4883 187.656 44.9687 186.973 43.418C186.48 42.2812 185.965 41.2734 185.852 41.1641C185.656 40.9805 184.707 40.9531 179.754 40.9531C175.262 40.9531 173.82 40.9961 173.641 41.1211C173.516 41.2187 172.996 42.2109 172.492 43.332C171.988 44.4531 171.473 45.4453 171.348 45.5312C171.18 45.6562 170.379 45.7109 168.508 45.7109C166.379 45.7109 165.848 45.6719 165.598 45.4883C165.43 45.375 165.289 45.1797 165.289 45.0664C165.289 44.7891 176.465 19.8164 176.73 19.4922C176.914 19.2852 177.25 19.2578 179.766 19.2578C181.867 19.2578 182.637 19.2969 182.746 19.4258Z" fill="#5D2ABC"/>
    <path d="M179.293 28.1719C178.996 28.4375 176.48 34.0781 176.48 34.5C176.48 34.6406 176.59 34.8516 176.73 34.9766C176.957 35.1875 177.391 35.2148 179.797 35.2148C182.691 35.2148 182.746 35.1992 182.957 34.625C183.055 34.3477 180.496 28.3555 180.16 28.1016C179.836 27.8789 179.641 27.8945 179.293 28.1719ZM181 31.7422L182.203 34.5156H179.754C178.41 34.5156 177.32 34.4844 177.32 34.4727C177.32 34.4453 177.793 33.3242 178.383 31.9805C178.969 30.6367 179.5 29.3906 179.57 29.207C179.641 29.0273 179.727 28.9023 179.754 28.9297C179.781 28.957 180.34 30.2305 181 31.7422Z" fill="#5D2ABC"/>
    <path d="M55.7305 18.9609L55.2656 19.3672V27.7539C55.2656 37.0039 55.2969 37.3984 56.1914 39.707C57.5039 43.1094 60.4414 45.6406 64.1797 46.5664C65.6758 46.9297 68.4727 47.0703 70.0391 46.8477C71.6055 46.6211 73.5078 45.9648 74.7109 45.2656C76.1367 44.4102 77.8047 42.6875 78.5156 41.3047C80.0117 38.4062 80.0977 37.6484 80.0977 27.543V19.3672L79.2852 18.5547H76.4609C73.3281 18.5547 72.9648 18.6406 72.6953 19.4102C72.5859 19.7188 72.543 22.293 72.543 27.5859C72.543 32.7344 72.4883 35.5625 72.3906 36.0938C72.0547 37.7461 70.8945 39.1875 69.5625 39.582C68.668 39.8477 66.7227 39.8047 65.8555 39.5117C64.8203 39.1484 63.6875 38.082 63.2812 37.0625C62.9609 36.2617 62.9609 36.2344 62.8906 27.8242L62.8203 19.3672L62.3594 18.9609L61.9102 18.5547H56.1758L55.7305 18.9609ZM61.9102 19.6602C61.9961 19.8438 62.0508 22.6562 62.0508 27.8242C62.0508 35.0312 62.0781 35.7891 62.3047 36.6289C62.9453 38.9492 64.3594 40.1836 66.8359 40.5469C69.4375 40.9258 71.8008 39.8203 72.6953 37.7891C73.3398 36.3633 73.3828 35.7305 73.3828 27.5C73.3828 21.6484 73.4258 19.6914 73.5508 19.5625C73.8164 19.2969 78.8945 19.3242 79.1055 19.5938C79.2305 19.7461 79.2578 21.9727 79.2305 28.4531C79.1758 36.8672 79.1758 37.1328 78.8672 38.2227C77.832 41.9883 75.2305 44.6641 71.5625 45.7109C70.0664 46.1445 66.75 46.2578 65.1445 45.9375C60.4727 44.9844 57.4766 42.1016 56.3594 37.4961C56.1758 36.6836 56.1211 35.2969 56.0781 28.1719C56.0352 21.8164 56.0508 19.7461 56.1914 19.5938C56.3164 19.4375 56.875 19.3945 59.0586 19.3945C61.5898 19.3945 61.7734 19.4102 61.9102 19.6602Z" fill="#5D2ABC"/>
    <path d="M187 47.3086C184.805 47.7266 182.984 48.9727 182.242 50.582C181.922 51.2695 181.867 51.5625 181.867 52.7109C181.867 54.3789 182.145 55.2461 182.984 56.1836C184.047 57.3594 185.879 58.1133 188.512 58.4492C191.098 58.7734 192.219 59.3594 192.188 60.3555C192.16 61.4023 191 62.0195 189.07 62.0078C187.109 61.9922 186.105 61.4453 184.973 59.793C184.832 59.5977 184.594 59.4297 184.438 59.4297C184.285 59.4297 183.461 59.7812 182.621 60.2148C181.195 60.9414 181.098 61.0273 181.098 61.418C181.098 62.0742 181.879 63.3906 182.789 64.2578C184.258 65.6602 186.203 66.2891 189.043 66.2891C192.621 66.2891 195.113 65.0859 196.23 62.8164C196.68 61.9219 196.695 61.8242 196.695 60.1992C196.695 58.7461 196.637 58.4219 196.359 57.793C195.965 56.9102 194.859 55.8203 193.824 55.3008C193.043 54.9102 190.93 54.3906 188.902 54.1094C187.445 53.9141 186.508 53.4961 186.441 53.0039C186.285 51.9141 187.098 51.3945 189 51.3828C190.062 51.3828 190.383 51.4375 191.043 51.7461C191.488 51.957 192.008 52.332 192.23 52.6289C192.512 52.9648 192.75 53.1328 192.988 53.1328C193.461 53.1328 196.023 51.7891 196.203 51.4375C196.328 51.2266 196.289 51.0156 196.035 50.5273C195.336 49.1289 193.77 47.9805 191.84 47.4492C190.762 47.1523 188.23 47.0859 187 47.3086ZM191.211 48.1602C192.355 48.3984 193.449 48.875 194.09 49.4375C194.582 49.8398 195.363 50.8359 195.363 51.0469C195.363 51.1172 194.859 51.4219 194.23 51.7305L193.113 52.3047L192.848 51.9844C192.176 51.1172 189.992 50.3867 188.566 50.5273C186.594 50.7227 185.711 51.3516 185.602 52.6133C185.543 53.2578 185.586 53.4102 185.906 53.7891C186.41 54.3789 187.406 54.7422 189.348 55.0195C191.223 55.2852 192.777 55.6797 193.574 56.0859C194.484 56.5469 195.434 57.5977 195.715 58.4375C195.992 59.2891 196.035 60.8984 195.797 61.7539C195.086 64.3437 191.715 65.8828 187.754 65.4492C185 65.1406 183.402 64.2187 182.285 62.3125C182.074 61.9648 181.949 61.6133 182.004 61.5312C182.063 61.4453 182.594 61.1367 183.18 60.8281L184.273 60.2852L184.707 60.9141C185.574 62.1328 187.195 62.8477 189.141 62.832C191.672 62.832 192.988 61.9492 192.988 60.2422C192.988 58.7734 191.922 58.1133 188.887 57.6797C186.145 57.3008 184.859 56.8398 183.852 55.8594C183.055 55.0898 182.734 54.3477 182.664 53.1172C182.578 51.7187 182.859 50.8477 183.699 49.9258C185.168 48.2891 188.344 47.5469 191.211 48.1602Z" fill="#5D2ABC"/>
    <path d="M116.816 47.6172C115.195 47.9648 113.906 48.6953 112.621 49.9805C111.391 51.1992 110.691 52.418 110.215 54.1094C109.824 55.5391 109.867 58.4766 110.285 59.8516C111.797 64.6641 115.938 67.0039 121.281 66.0781C125.672 65.3086 128.5 61.6563 128.5 56.7695C128.5 55.1328 128.191 53.7734 127.492 52.293C127.031 51.3242 126.707 50.8906 125.785 49.9805C124.457 48.6641 123.434 48.0781 121.77 47.6719C120.355 47.3359 118.273 47.3203 116.816 47.6172ZM122.387 48.6953C124.859 49.6055 126.805 51.8281 127.434 54.5313C127.742 55.832 127.715 58.0156 127.379 59.3477C126.68 62.0898 124.68 64.2734 122.148 65.0703C121.309 65.3359 120.848 65.3789 119.125 65.3789C117.293 65.3672 117 65.3359 116.063 64.9883C112.719 63.7969 110.734 60.7734 110.734 56.9102C110.734 52.1914 113.754 48.6523 118.133 48.2617C119.559 48.1328 121.309 48.3008 122.387 48.6953Z" fill="#5D2ABC"/>
    <path d="M117.211 51.1836C114.047 52.1797 112.664 56.6289 114.441 60.1289C114.789 60.8164 115.754 61.7969 116.441 62.1445C117.25 62.5664 118.707 62.8164 119.715 62.7344C122.891 62.4531 124.707 60.3125 124.723 56.8828C124.723 53.9297 123.422 51.8867 121.07 51.1562C119.953 50.8086 118.355 50.8203 117.211 51.1836ZM121.281 52.0664C122.023 52.375 123 53.3555 123.379 54.1797C124.707 56.9648 123.699 60.4805 121.266 61.5586C119.754 62.2305 117.559 61.9766 116.246 60.9961C114.117 59.375 113.852 55.2734 115.742 53.1172C116.914 51.7734 119.449 51.2969 121.281 52.0664Z" fill="#5D2ABC"/>
    <path d="M153.957 47.6172C153.453 47.7148 152.516 48.0625 151.875 48.3867C148.504 50.0508 146.559 54.0391 147.09 58.1719C147.398 60.6055 148.305 62.4687 149.902 63.9531C151.453 65.3945 153.148 66.0664 155.594 66.2344C159.664 66.5117 163.008 64.7344 164.59 61.4609C165.305 59.9609 165.609 58.5781 165.598 56.7695C165.598 54.9375 165.316 53.7031 164.547 52.1523C163.43 49.8711 161.176 48.1328 158.645 47.6016C157.426 47.3516 155.16 47.3516 153.957 47.6172ZM158.461 48.3867C161.301 48.9727 163.734 51.3828 164.547 54.4336C164.867 55.5937 164.855 58.0586 164.547 59.2891C163.75 62.3828 161.484 64.6094 158.477 65.2383C155.398 65.8984 152.18 65.0703 150.25 63.1406C147.535 60.4375 147.035 55.4961 149.105 52.0391C150.055 50.4297 152.141 48.875 153.902 48.457C154.895 48.2187 157.441 48.1758 158.461 48.3867Z" fill="#5D2ABC"/>
    <path d="M154.645 51.0742C152.797 51.6055 151.426 53.0898 150.965 55.0898C150.266 58.0156 151.328 60.8984 153.496 62.0625C155.609 63.1836 158.449 62.9023 160.156 61.3906C161.262 60.4258 162.016 58.1992 161.875 56.3516C161.695 53.9297 160.617 52.207 158.727 51.3398C157.805 50.918 155.691 50.7813 154.645 51.0742ZM158.07 51.957C159.023 52.2773 160.125 53.3398 160.617 54.418C160.98 55.2188 161.023 55.4414 161.023 56.7695C161.023 58.5625 160.687 59.5547 159.734 60.5625C158.824 61.543 157.973 61.8672 156.336 61.8672C154.781 61.8789 154.07 61.6133 153.078 60.7031C151.426 59.1797 151.078 55.832 152.348 53.8438C152.867 53.0469 153.707 52.3047 154.461 52.0117C155.344 51.6758 157.133 51.6328 158.07 51.957Z" fill="#5D2ABC"/>
    <path d="M93.8359 47.8398C93.5977 48.0781 93.5977 65.4648 93.8359 65.7031C93.9453 65.8125 94.6172 65.8711 95.9063 65.8711C97.1914 65.8711 97.8633 65.8125 97.9766 65.7031C98.0859 65.5898 98.1445 64.7617 98.1445 62.9023V60.2695L99.1641 60.2852H100.172L102.59 63.082L105.012 65.8711H107.277C109.754 65.8711 109.895 65.8281 109.895 65.1133C109.895 64.75 109.5 64.2305 107.668 62.1602L105.445 59.6406L106.172 59.25C107.668 58.4375 108.605 57.0234 108.941 55.1172C109.531 51.7031 107.43 48.5977 104.059 47.8828C102.801 47.6172 94.1016 47.5742 93.8359 47.8398ZM103.906 48.6641C105.559 49.0156 106.984 50.1367 107.738 51.6602C108.102 52.4297 108.145 52.6406 108.145 53.9844C108.145 55.4141 108.129 55.4961 107.613 56.5195C107.039 57.6797 106.465 58.2539 105.375 58.7148C104.648 59.0234 104.395 59.5273 104.719 60.0312C104.801 60.1875 105.809 61.3477 106.941 62.6094C108.063 63.8828 109.012 64.9727 109.027 65.043C109.055 65.1133 108.328 65.168 107.277 65.168H105.488L103.066 62.3711L100.633 59.5703H99.207C98.2813 59.5703 97.7227 59.625 97.6094 59.7383C97.5 59.8516 97.4414 60.6758 97.4414 62.5391V65.168H94.3672V48.5117H98.7734C101.484 48.5117 103.445 48.5664 103.906 48.6641Z" fill="#5D2ABC"/>
    <path d="M97.6094 51.4805C97.5 51.5898 97.4414 52.3594 97.4414 54.0391C97.4414 55.7227 97.5 56.4922 97.6094 56.6016C97.8359 56.8281 102.73 56.8398 103.488 56.6016C104.172 56.3945 104.926 55.5664 105.137 54.7812C105.473 53.5508 104.887 52.1094 103.836 51.6055C103.289 51.3398 102.984 51.3125 100.508 51.3125C98.5781 51.3125 97.7383 51.3516 97.6094 51.4805ZM103.375 52.293C104.703 52.9766 104.758 54.9648 103.457 55.7227C103.023 55.957 102.66 56 100.562 56.0586L98.1445 56.0977V51.9844L100.562 52.0391C102.352 52.0664 103.066 52.1367 103.375 52.293Z" fill="#5D2ABC"/>
    <path d="M130.402 47.8945C130.203 48.0938 130.176 49.0859 130.176 56.8281C130.176 64.2305 130.203 65.5742 130.371 65.7148C130.527 65.8398 131.926 65.8711 135.871 65.8398C140.863 65.7852 141.215 65.7695 142.066 65.4766C144.543 64.6523 145.762 62.957 145.762 60.3398C145.773 59.375 145.703 59.0938 145.34 58.2969C145.102 57.793 144.684 57.1484 144.402 56.8828L143.914 56.3789L144.32 55.9883C144.543 55.7773 144.852 55.2461 145.02 54.8242C145.27 54.168 145.297 53.8438 145.242 52.8516C145.199 52.1914 145.062 51.3672 144.934 51.0039C144.613 50.0781 143.605 49 142.586 48.4961C141.145 47.7578 140.391 47.6719 135.254 47.6719C131.227 47.6719 130.582 47.6992 130.402 47.8945ZM141.551 48.9023C142.668 49.3672 143.437 49.9961 143.93 50.8789C144.293 51.5078 144.363 51.8281 144.418 52.7812C144.488 54.168 144.348 54.6719 143.605 55.5664C143.297 55.9297 143.047 56.3242 143.047 56.4336C143.047 56.5312 143.328 56.9375 143.676 57.332C144.727 58.5078 144.934 59.0391 144.934 60.4102C144.922 62.2148 144.262 63.418 142.836 64.2578C141.691 64.9453 140.809 65.043 135.746 65.1289L131.016 65.1992V48.4961L135.883 48.5391C140.586 48.582 140.766 48.5977 141.551 48.9023Z" fill="#5D2ABC"/>
    <path d="M134.191 51.4219C133.996 51.6328 133.953 51.9687 133.953 53.2305C133.953 55.3711 133.758 55.2578 137.34 55.2031C139.984 55.1602 140.207 55.1484 140.684 54.8516C141.914 54.082 141.758 52.332 140.391 51.5352C139.957 51.2695 139.621 51.2422 137.172 51.1992C134.625 51.1562 134.414 51.1719 134.191 51.4219ZM139.871 52.1914C140.137 52.3047 140.43 52.5977 140.586 52.8945C140.852 53.3555 140.852 53.3984 140.613 53.7617C140.488 53.957 140.223 54.1797 140.023 54.25C139.828 54.3359 138.543 54.3906 137.156 54.3906H134.652V52.0117H137.031C138.723 52.0117 139.551 52.0664 139.871 52.1914Z" fill="#5D2ABC"/>
    <path d="M134.277 57.9609C133.969 58.1719 133.953 58.2813 133.953 60.0469C133.953 62.5664 133.73 62.4102 137.27 62.3555C139.969 62.3008 140.066 62.2852 140.824 61.9063C141.957 61.3633 142.305 60.5508 141.871 59.5273C141.621 58.9414 141.172 58.5352 140.32 58.1406C139.688 57.8633 139.355 57.8203 137.102 57.7773C134.945 57.7383 134.543 57.7656 134.277 57.9609ZM140.18 59.0117C141.41 59.625 141.563 60.5625 140.527 61.1641C140.094 61.4336 139.758 61.4609 137.352 61.5039L134.652 61.5586V58.5625L137.074 58.6172C139.313 58.6602 139.52 58.6875 140.18 59.0117Z" fill="#5D2ABC"/>
    <path d="M165.598 47.8398C165.484 47.9531 165.43 48.6094 165.43 49.8711C165.43 51.5625 165.457 51.7305 165.695 51.8711C165.863 51.957 166.98 52.0117 168.352 52.0117H170.746V58.7734C170.746 63.8398 170.785 65.5742 170.914 65.7031C171.121 65.9102 174.758 65.9375 175.082 65.7305C175.262 65.6172 175.289 64.6641 175.332 58.8008L175.375 52.0117H177.684C179.012 52.0117 180.117 51.957 180.27 51.8711C180.508 51.7305 180.535 51.5625 180.535 49.8711C180.535 48.6094 180.48 47.9531 180.367 47.8398C180.129 47.6016 165.836 47.6016 165.598 47.8398ZM179.836 49.8398V51.1719H177.461C175.262 51.1719 175.055 51.1992 174.801 51.4531C174.535 51.7188 174.52 51.9141 174.52 58.4492V65.168H171.598L171.555 58.3672C171.516 51.8281 171.5 51.5625 171.246 51.3672C171.039 51.2148 170.422 51.1719 168.617 51.1719H166.27V48.5117H179.836V49.8398Z" fill="#5D2ABC"/>
    <path d="M57.6719 49.4219C57.4648 49.6328 57.4336 50.375 57.4336 57.4687C57.4336 64.5664 57.4648 65.3086 57.6719 65.5195C57.8828 65.7305 58.3164 65.7422 61.9688 65.7031C66.418 65.6328 66.75 65.5742 68.375 64.7227C69.4102 64.1758 70.7109 62.8594 71.2695 61.8086C72.543 59.418 72.5977 55.957 71.4102 53.4531C70.8516 52.293 69.4531 50.793 68.3867 50.2187C66.75 49.3672 66.418 49.3086 61.9688 49.2383C58.3164 49.1992 57.8828 49.2109 57.6719 49.4219ZM65.8984 50.207C69.1992 50.8086 71.4531 53.7031 71.4805 57.332C71.4805 58.0586 71.3945 59.0117 71.2969 59.4297C70.6406 62.1875 68.5273 64.2578 65.9141 64.7344C65.4492 64.8203 63.5469 64.8906 61.6758 64.8906H58.2734V50.0508H61.6758C63.5469 50.0508 65.4492 50.1211 65.8984 50.207Z" fill="#5D2ABC"/>
    <path d="M61.1562 52.7969C60.9609 52.9766 60.9336 53.6055 60.9336 57.4687C60.9336 61.3359 60.9609 61.9648 61.1562 62.1445C61.3242 62.3281 61.7148 62.3711 63.0742 62.3711C65.4805 62.3711 66.5273 62.0469 67.5352 61.0391C69.0039 59.5703 69.2969 57.0937 68.2617 54.9805C67.6875 53.8164 66.918 53.1328 65.7734 52.7812C64.7812 52.4727 61.4648 52.4883 61.1562 52.7969ZM65.5781 53.5781C66.3594 53.8164 67.2695 54.6719 67.6602 55.5391C67.9258 56.125 67.9961 56.5195 67.9961 57.4687C67.9961 58.9258 67.6211 59.8906 66.7656 60.6328C65.9688 61.3047 65.1016 61.5312 63.2109 61.5312H61.6328V53.4102H63.3242C64.2617 53.4102 65.2695 53.4805 65.5781 53.5781Z" fill="#5D2ABC"/>
    <path d="M74.7266 49.4375C74.5313 49.6328 74.5 50.5547 74.5 57.4688C74.5 64.3867 74.5313 65.3086 74.7266 65.5039C74.9219 65.7031 75.6641 65.7305 80.8672 65.7305C86.0703 65.7305 86.8125 65.7031 87.0078 65.5039C87.1914 65.3359 87.2305 64.9609 87.2305 63.6875C87.2305 62.7891 87.1602 61.9492 87.0898 61.7969C86.9531 61.543 86.7539 61.5312 82.8242 61.5312H78.6992V59.5703H82.5469C87.2461 59.5703 86.9531 59.6953 86.9531 57.625C86.9531 56.8555 86.8945 56.0703 86.8125 55.875L86.6719 55.5117H78.6992V53.4102H82.7266C86.4609 53.4102 86.7852 53.3984 86.9922 53.1602C87.3281 52.7969 87.3438 49.7578 87.0078 49.4375C86.8125 49.2383 86.0703 49.2109 80.8672 49.2109C75.6641 49.2109 74.9219 49.2383 74.7266 49.4375ZM86.3906 51.3125V52.5703H82.4492C78.9766 52.5703 78.4727 52.5977 78.25 52.8086C78.0391 53.0039 78 53.2578 78 54.4609C78 55.3711 78.0547 55.9297 78.168 56.043C78.293 56.168 79.3828 56.2109 82.2227 56.2109H86.1133V58.7305H82.2812C78.9766 58.7305 78.4063 58.7578 78.2227 58.9531C78.0547 59.1211 78 59.4844 78 60.5508C78 61.8242 78.0273 61.9492 78.3047 62.1445C78.5742 62.3438 79.2148 62.3711 82.5039 62.3711H86.3906V64.8906H75.3398V50.0508H86.3906V51.3125Z" fill="#5D2ABC"/>
    <path d="M47.7422 74.1836C46.9023 74.4062 46.4414 74.7578 45.8945 75.5156C45.5156 76.0469 45.4766 76.2422 45.4336 77.332C45.3789 78.6758 45.5156 79.2109 46.1758 79.9805C47 80.9609 48.4961 81.3516 49.9102 80.9297C52.707 80.1211 53.0703 75.7656 50.4414 74.4062C49.7539 74.0586 48.5508 73.9609 47.7422 74.1836ZM49.9922 74.9531C51 75.4727 51.5586 76.4102 51.5586 77.5859C51.5469 78.7344 50.8047 79.9102 49.8398 80.2734C48.875 80.6367 47.3906 80.3281 46.7891 79.6445C45.4453 78.1055 45.8789 75.668 47.6445 74.9102C48.3281 74.6172 49.3633 74.6328 49.9922 74.9531Z" fill="#5D2ABC"/>
    <path d="M79.5234 74.1719C78.1094 74.5742 77.3008 75.6133 77.1875 77.1953C77.0625 79.082 77.9141 80.4688 79.4805 80.9297C81.7891 81.6016 83.8164 80.2578 83.9727 77.9492C84.0547 76.8008 83.875 76.0469 83.3281 75.2891C82.6016 74.2813 80.9102 73.7773 79.5234 74.1719ZM81.8867 74.9805C83.832 75.9336 83.8477 79.168 81.8867 80.1602C81.4258 80.3984 81.1328 80.4414 80.4336 80.3984C79.3281 80.3281 78.5742 79.8672 78.1406 78.957C77.707 78.0469 77.7734 76.6484 78.3047 75.8516C79.0352 74.7578 80.6133 74.3672 81.8867 74.9805Z" fill="#5D2ABC"/>
    <path d="M93.9023 74.1289C93.1328 74.3242 92.6328 74.6172 92.1992 75.1367C91.6094 75.8359 91.3984 76.4648 91.3984 77.5586C91.3984 78.6484 91.6094 79.2813 92.1992 79.9805C93.4141 81.4336 95.9883 81.4922 97.2773 80.0898C97.8633 79.4492 98.2812 78.3984 98.2812 77.5586C98.2812 76.2969 97.5 74.9414 96.4766 74.4063C95.8477 74.1016 94.6172 73.9609 93.9023 74.1289ZM95.875 74.8984C96.9414 75.3594 97.582 76.3398 97.582 77.5586C97.582 78.7344 96.8398 79.9102 95.8633 80.2734C95.2344 80.5117 94.1289 80.457 93.5273 80.1484C91.4961 79.1133 91.5391 75.8906 93.5977 74.9531C94.2813 74.6328 95.1914 74.6172 95.875 74.8984Z" fill="#5D2ABC"/>
    <path d="M173.402 74.1133C170.801 74.6758 169.879 78.0469 171.75 80.0898C173.039 81.4922 175.598 81.4336 176.828 79.9805C177.418 79.2813 177.625 78.6484 177.625 77.5586C177.625 76.4648 177.418 75.8359 176.816 75.1211C176.129 74.3086 174.605 73.8477 173.402 74.1133ZM175.445 74.9531C177.305 75.8086 177.559 78.5664 175.879 79.9102C174.969 80.6523 173.359 80.6094 172.465 79.8242C170.898 78.4414 171.219 75.7109 173.051 74.8828C173.652 74.6172 174.773 74.6445 175.445 74.9531Z" fill="#5D2ABC"/>
    <path d="M0.78125 77.5586V80.9883H5.67578V80.2891H1.48047V77.9062H5.39844V77.207H1.48047V74.8281H5.53516V74.1289H0.78125V77.5586Z" fill="#5D2ABC"/>
    <path d="M6.65625 77.5586V80.9883H8.89453C11.0352 80.9883 11.1328 80.9727 11.1328 80.707C11.1328 80.4414 11.0352 80.4258 9.24219 80.4258H7.35547V74.1289H6.65625V77.5586Z" fill="#5D2ABC"/>
    <path d="M14.6289 77.5586V80.9883H19.3867V80.2891H15.1875V77.9062H19.1055V77.207H15.1875V74.8281H19.3867V74.1289H14.6289V77.5586Z" fill="#5D2ABC"/>
    <path d="M20.0859 74.2266C20.0859 74.2969 20.6875 75.8359 21.4414 77.6562C23.2461 82.1055 23.0508 82.1055 24.8828 77.6562C25.625 75.8203 26.2422 74.2813 26.2422 74.2266C26.2422 74.1719 26.0859 74.1289 25.9062 74.1289C25.6094 74.1289 25.4727 74.3945 24.4219 76.957C23.793 78.5234 23.2344 79.8398 23.1914 79.8945C23.1367 79.9531 22.5625 78.6641 21.918 77.0547C20.8555 74.4062 20.7148 74.1289 20.4219 74.1289C20.2383 74.1289 20.0859 74.1719 20.0859 74.2266Z" fill="#5D2ABC"/>
    <path d="M26.9414 77.5586V80.9883H31.8359V80.2891H27.6406V77.9062H31.5547V77.207H27.6406V74.8281H31.6953V74.1289H26.9414V77.5586Z" fill="#5D2ABC"/>
    <path d="M33.0938 77.5586V80.9883H33.793L33.8242 78.3711L33.8633 75.7656L35.9609 78.3711C37.125 79.7969 38.1445 80.9727 38.2422 80.9727C38.3672 80.9883 38.4102 80.2187 38.4102 77.5586C38.4102 74.2383 38.3984 74.1289 38.1328 74.1289C37.8633 74.1289 37.8516 74.2383 37.8242 76.8008L37.7812 79.4883L35.6133 76.8164C34.4258 75.332 33.3594 74.1289 33.2773 74.1289C33.1367 74.1289 33.0938 74.9102 33.0938 77.5586Z" fill="#5D2ABC"/>
    <path d="M39.25 74.4062C39.25 74.6758 39.3477 74.6875 40.5078 74.6875H41.7695V77.8359C41.7695 80.8906 41.7812 80.9883 42.0469 80.9883C42.3125 80.9883 42.3281 80.8906 42.3281 77.8359V74.6875H43.5859C44.7461 74.6875 44.8438 74.6758 44.8438 74.4062C44.8438 74.1406 44.7461 74.1289 42.0469 74.1289C39.3477 74.1289 39.25 74.1406 39.25 74.4062Z" fill="#5D2ABC"/>
    <path d="M55.8984 77.5586V80.9883H57.4219C59.6719 80.9883 60.6406 80.5547 61.2812 79.25C61.5625 78.707 61.6328 78.3398 61.6328 77.5703C61.6328 76.3398 61.3242 75.625 60.5273 74.9414C59.7852 74.3086 59.0703 74.1289 57.3086 74.1289H55.8984V77.5586ZM59.8711 75.3047C60.8906 76.0898 61.2422 77.1523 60.8633 78.3984C60.6406 79.168 60.0078 79.8945 59.3516 80.1328C59.1289 80.2188 58.4297 80.2891 57.7695 80.2891H56.5977V74.8008L57.9688 74.8555C59.2266 74.8984 59.3945 74.9258 59.8711 75.3047Z" fill="#5D2ABC"/>
    <path d="M62.75 77.5586V80.9883H67.6484V80.2891H63.3125V77.9062H67.2266V77.207H63.3125V74.8281H67.5078V74.1289H62.75V77.5586Z" fill="#5D2ABC"/>
    <path d="M71.2852 77.543C71.2852 80.8906 71.2969 80.9883 71.5625 80.9883C71.8281 80.9883 71.8438 80.8906 71.8438 79.7266V78.4688H73.6055L74.7266 79.7148C75.6914 80.8203 75.8867 80.9727 76.3047 80.9727L76.7812 80.9883L76.5156 80.6641C76.375 80.4961 75.8867 79.9648 75.4375 79.4883C74.6289 78.6211 74.543 78.3281 75.0898 78.3281C75.2422 78.3281 75.6211 78.0898 75.9141 77.7812C76.418 77.2773 76.4609 77.1953 76.4609 76.4258C76.4609 75.5 76.168 74.8711 75.5234 74.4492C75.2148 74.2383 74.7812 74.1836 73.2148 74.1562L71.2852 74.1016V77.543ZM75.3555 75.2344C75.6914 75.5703 75.7617 75.7656 75.7617 76.2969C75.7617 76.8281 75.6914 77.0273 75.3555 77.3633C74.9492 77.7695 74.9219 77.7695 73.3984 77.7695H71.8438V74.8281H73.3984C74.9219 74.8281 74.9492 74.8281 75.3555 75.2344Z" fill="#5D2ABC"/>
    <path d="M85.1328 77.5703V81.0156L87.1328 80.9609C89.3438 80.9023 89.8633 80.75 90.2383 80.0078C90.6289 79.2383 90.4062 78.1875 89.7344 77.7109L89.4258 77.5L89.8047 77.0664C90.0859 76.7305 90.168 76.4805 90.168 75.9609C90.168 74.5742 89.3711 74.1406 86.8555 74.1289H85.1328V77.5703ZM89.0078 75.0508C89.4961 75.4141 89.6953 76.0039 89.4844 76.4531C89.2461 76.9844 88.5312 77.207 87.0898 77.207H85.832V74.6602L87.2305 74.7148C88.3516 74.7578 88.6992 74.8281 89.0078 75.0508ZM88.6172 77.9062C89.2734 78.0898 89.75 78.5781 89.75 79.043C89.75 80.0508 89.2891 80.2891 87.3008 80.2891H85.832V77.7695H86.9922C87.625 77.7695 88.3516 77.8242 88.6172 77.9062Z" fill="#5D2ABC"/>
    <path d="M98.4219 74.4062C98.4219 74.6602 98.5195 74.6875 99.6133 74.6875H100.801V80.9883H101.5V74.6875H102.688C103.781 74.6875 103.879 74.6602 103.879 74.4062C103.879 74.1406 103.781 74.1289 101.148 74.1289C98.5195 74.1289 98.4219 74.1406 98.4219 74.4062Z" fill="#5D2ABC"/>
    <path d="M104.719 77.5586V80.9883H105.418V74.1289H104.719V77.5586Z" fill="#5D2ABC"/>
    <path d="M108.27 74.3945C107.586 74.7148 106.773 75.625 106.563 76.3555C106.215 77.5156 106.438 78.9453 107.125 79.8672C107.949 81 110.102 81.3789 111.531 80.6641C112.383 80.2188 112.523 80.0508 112.215 79.7539C112.02 79.5586 111.977 79.5586 111.738 79.7695C110.648 80.7617 108.73 80.582 107.695 79.4063C107.195 78.8164 107.039 78.2148 107.125 77.1367C107.207 76.1289 107.656 75.4844 108.605 75.0234C109.559 74.5469 110.578 74.5898 111.445 75.1641C111.977 75.5273 112.047 75.543 112.258 75.3164C112.469 75.1094 112.453 75.0781 112.203 74.8711C111.207 74.1016 109.402 73.875 108.27 74.3945Z" fill="#5D2ABC"/>
    <path d="M115.309 74.5742C115.195 74.8281 114.523 76.3125 113.824 77.8789C113.125 79.4336 112.551 80.7773 112.551 80.8477C112.551 80.9297 112.703 80.9883 112.871 80.9883C113.137 80.9883 113.277 80.832 113.574 80.1484L113.938 79.3086H117.754L118.117 80.1484C118.441 80.875 118.539 80.9883 118.875 80.9883C119.32 80.9883 119.477 81.4492 117.547 77.1367C116.355 74.4922 116.187 74.1992 115.867 74.1563C115.574 74.1133 115.461 74.1992 115.309 74.5742ZM116.664 76.8008C117.098 77.7813 117.445 78.6211 117.445 78.6641C117.445 78.707 116.719 78.7461 115.824 78.7461C114.355 78.7461 114.203 78.7188 114.285 78.5078C114.566 77.8086 115.824 74.9688 115.852 74.9961C115.867 75.0234 116.23 75.8359 116.664 76.8008Z" fill="#5D2ABC"/>
    <path d="M122.484 77.5586C122.484 80.8906 122.496 80.9883 122.762 80.9883C123.027 80.9883 123.043 80.8906 123.043 77.5586C123.043 74.2266 123.027 74.1289 122.762 74.1289C122.496 74.1289 122.484 74.2266 122.484 77.5586Z" fill="#5D2ABC"/>
    <path d="M124.441 77.5586V80.9883H125.141L125.168 78.3711L125.211 75.7656L127.309 78.3281C128.469 79.7422 129.492 80.918 129.59 80.9609C129.715 81 129.758 80.2578 129.758 77.5703C129.758 74.2383 129.742 74.1289 129.477 74.1289C129.211 74.1289 129.199 74.2383 129.168 76.8008L129.129 79.4766L126.961 76.8008C125.77 75.332 124.723 74.1289 124.625 74.1289C124.484 74.1289 124.441 74.8555 124.441 77.5586Z" fill="#5D2ABC"/>
    <path d="M130.598 74.4062C130.598 74.6758 130.695 74.6875 131.855 74.6875H133.113V77.8359C133.113 80.8906 133.129 80.9883 133.395 80.9883C133.66 80.9883 133.676 80.8906 133.676 77.8359V74.6875H134.934C136.094 74.6875 136.191 74.6758 136.191 74.4062C136.191 74.1406 136.094 74.1289 133.395 74.1289C130.695 74.1289 130.598 74.1406 130.598 74.4062Z" fill="#5D2ABC"/>
    <path d="M137.031 77.5586V80.9883H141.789V80.2891H137.59V77.9062H141.508V77.207H137.59V74.8281H141.789V74.1289H137.031V77.5586Z" fill="#5D2ABC"/>
    <path d="M142.906 77.5586C142.906 80.8906 142.922 80.9883 143.188 80.9883C143.453 80.9883 143.465 80.8906 143.465 79.7266V78.4688H145.199L146.402 79.7422C147.453 80.8594 147.637 81.0156 148.012 80.9727L148.418 80.918L147.34 79.7539C146.266 78.6211 146.137 78.3281 146.711 78.3281C146.867 78.3281 147.242 78.0898 147.535 77.7812C148.055 77.2773 148.082 77.1953 148.082 76.4102C148.082 75.7656 148.012 75.457 147.762 75.0938C147.23 74.2812 146.727 74.1289 144.699 74.1289H142.906V77.5586ZM146.977 75.2344C147.313 75.5703 147.383 75.7656 147.383 76.2969C147.383 76.8281 147.313 77.0273 146.977 77.3633C146.57 77.7695 146.543 77.7695 145.02 77.7695H143.465V74.8281H145.02C146.543 74.8281 146.57 74.8281 146.977 75.2344Z" fill="#5D2ABC"/>
    <path d="M149.062 77.5586V80.9883H149.762L149.789 78.3711L149.832 75.7656L151.973 78.3711C153.148 79.8125 154.168 80.9883 154.238 80.9883C154.32 80.9883 154.379 79.6445 154.379 77.5586C154.379 74.2383 154.363 74.1289 154.098 74.1289C153.832 74.1289 153.816 74.2383 153.789 76.8008L153.746 79.4609L151.578 76.8008C150.391 75.332 149.34 74.1289 149.242 74.1289C149.105 74.1289 149.062 74.8711 149.062 77.5586Z" fill="#5D2ABC"/>
    <path d="M158.016 74.4062C157.875 74.6758 155.301 80.3711 155.117 80.8047C155.078 80.9297 155.176 80.9883 155.426 80.9883C155.75 80.9883 155.848 80.875 156.152 80.1484L156.52 79.3086H160.379L160.758 80.1484C161.062 80.832 161.191 80.9883 161.457 80.9883C161.637 80.9883 161.793 80.9453 161.793 80.9023C161.793 80.8477 161.121 79.3086 160.293 77.4727C158.98 74.5078 158.77 74.1289 158.488 74.1289C158.309 74.1289 158.098 74.2539 158.016 74.4062ZM159.316 76.8867L160.098 78.6758L159.273 78.7188C158.812 78.7461 158.07 78.7461 157.621 78.7188L156.797 78.6758L157.582 76.8984C158.016 75.9219 158.406 75.1094 158.449 75.1094C158.504 75.1094 158.883 75.9062 159.316 76.8867Z" fill="#5D2ABC"/>
    <path d="M163.668 74.3945C162.98 74.7148 162.168 75.625 161.961 76.3555C161.75 77.0117 161.75 78.0898 161.93 78.7344C162.492 80.6914 164.98 81.6445 166.926 80.6641C167.777 80.2305 167.918 80.0508 167.625 79.7695C167.441 79.5859 167.359 79.6016 166.84 79.9531C165.402 80.9023 163.332 80.3164 162.672 78.7617C162.422 78.1602 162.422 76.957 162.672 76.3555C163.316 74.8008 165.402 74.2109 166.84 75.1797C167.387 75.5273 167.441 75.543 167.652 75.3164C167.863 75.1094 167.848 75.0781 167.598 74.8711C166.605 74.1016 164.801 73.875 163.668 74.3945Z" fill="#5D2ABC"/>
    <path d="M168.926 77.5586C168.926 80.8906 168.941 80.9883 169.207 80.9883C169.473 80.9883 169.484 80.8906 169.484 77.5586C169.484 74.2266 169.473 74.1289 169.207 74.1289C168.941 74.1289 168.926 74.2266 168.926 77.5586Z" fill="#5D2ABC"/>
    <path d="M178.719 77.5586V80.9883H179.418L179.445 78.3555L179.488 75.7109L181.641 78.3555C182.832 79.7969 183.879 80.9883 183.977 80.9883C184.133 80.9883 184.172 80.3555 184.172 77.5586V74.1289H183.473L183.445 76.7734L183.402 79.418L181.266 76.7734C180.074 75.3164 179.027 74.1289 178.914 74.1289C178.746 74.1289 178.719 74.6875 178.719 77.5586Z" fill="#5D2ABC"/>
    <path d="M187.477 74.8555C187.293 75.2617 186.746 76.4805 186.273 77.5586C185.797 78.6367 185.25 79.8516 185.07 80.2461L184.734 80.9883H185.125C185.461 80.9883 185.559 80.875 185.879 80.1484L186.242 79.3086H190.062L190.426 80.1484C190.719 80.832 190.859 80.9883 191.125 80.9883C191.293 80.9883 191.449 80.9297 191.449 80.8477C191.449 80.7773 190.789 79.25 189.992 77.4609C188.68 74.5195 188.496 74.1992 188.176 74.1563C187.867 74.1133 187.77 74.2109 187.477 74.8555ZM188.984 76.8281C189.418 77.8086 189.77 78.6484 189.77 78.6758C189.77 78.7188 189.043 78.7461 188.16 78.7461C187.277 78.7461 186.551 78.707 186.551 78.6641C186.551 78.5508 188.133 74.9531 188.16 74.9961C188.176 75.0234 188.551 75.8516 188.984 76.8281Z" fill="#5D2ABC"/>
    <path d="M192.285 77.5586V80.9883H194.523C196.664 80.9883 196.762 80.9727 196.762 80.707C196.762 80.4414 196.664 80.4258 194.875 80.4258H192.988V74.1289H192.285V77.5586Z" fill="#5D2ABC"/>
    <path d="M22.0703 85.7617C21.75 85.9297 21.3867 86.2383 21.2734 86.4609C20.9961 86.9766 21.0078 88.125 21.2891 88.5195C21.6094 88.9805 22.4062 89.3281 23.4844 89.4961C24.6055 89.6797 25.1211 89.9609 25.1211 90.4063C25.1211 91.0117 24.6172 91.3477 23.7227 91.3477C23.0664 91.3477 22.7031 91.1914 22.1562 90.6758L21.7656 90.3242L21.2031 90.5742C20.8984 90.7148 20.6445 90.8555 20.6445 90.8984C20.6445 91.1484 21.3008 91.9492 21.7344 92.2148C22.1836 92.4922 22.4336 92.5352 23.6523 92.5352C25.2461 92.5352 25.793 92.3398 26.2422 91.582C26.5625 91.0664 26.6172 89.918 26.3398 89.3867C26.0859 88.8945 25.207 88.4492 24.1016 88.2656C22.8711 88.0703 22.4648 87.875 22.4648 87.4961C22.4648 86.6016 24.0586 86.375 25.0078 87.1328C25.3164 87.3984 25.3438 87.3984 25.8477 87.1328C26.1406 86.9766 26.3789 86.8086 26.3789 86.7422C26.3789 86.5156 25.668 85.8711 25.1914 85.6641C24.4492 85.3555 22.8008 85.4102 22.0703 85.7617Z" fill="#5D2ABC"/>
    <path d="M60.8633 85.5937C59.7148 85.8711 58.8359 86.7266 58.4844 87.875C57.7422 90.3945 59.2266 92.6055 61.6875 92.6055C62.8906 92.6055 63.5625 92.3555 64.2891 91.625C65.0313 90.8984 65.2695 90.2383 65.2695 88.9375C65.2695 87.8594 64.793 86.7695 64.0664 86.2227C63.2422 85.5781 61.9531 85.3281 60.8633 85.5937ZM62.918 87.1172C64.1211 87.8164 64.1914 90.1016 63.0156 90.9688C62.0508 91.668 60.5 91.2773 59.9688 90.1719C59.6055 89.4414 59.6055 88.7969 59.9375 88.0547C60.2344 87.3828 60.4727 87.1758 61.1719 86.9375C61.7578 86.7266 62.3438 86.7969 62.918 87.1172Z" fill="#5D2ABC"/>
    <path d="M182.914 85.6758C181.445 86.1367 180.621 87.3711 180.605 89.1055C180.605 90.0156 180.664 90.2539 181.039 90.9258C181.641 91.9883 182.438 92.4805 183.754 92.5781C184.914 92.6602 185.797 92.4375 186.41 91.918L186.844 91.5547L186.371 91.0938L185.895 90.6328L185.363 90.9414C184.676 91.3477 183.699 91.3594 183.039 90.9805C182.355 90.5898 181.879 89.582 181.992 88.7578C182.23 87.2031 183.781 86.4453 185.266 87.1602L185.879 87.4688L186.312 87.0195L186.762 86.5742L186.371 86.2383C185.922 85.8438 184.762 85.4648 184.047 85.4805C183.77 85.4805 183.266 85.5781 182.914 85.6758Z" fill="#5D2ABC"/>
    <path d="M192.008 85.5938C191.043 85.8867 190.316 86.5039 189.824 87.4258C189.434 88.168 189.461 90.1016 189.867 90.8828C190.469 92.0195 191.547 92.6055 192.988 92.6055C195.043 92.6055 196.301 91.4297 196.457 89.3711C196.539 88.1406 196.23 87.2031 195.477 86.4609C194.652 85.6211 193.141 85.2578 192.008 85.5938ZM194.09 87.1328C195.266 87.957 195.434 89.7227 194.457 90.7031C193.813 91.3594 192.988 91.4844 192.09 91.0781C191.574 90.8555 191.379 90.6758 191.168 90.1992C190.691 89.1328 190.875 88.0156 191.629 87.3008C192.258 86.7266 193.391 86.6406 194.09 87.1328Z" fill="#5D2ABC"/>
    <path d="M0.78125 89.0352V92.4648H2.17969L2.20703 90.1406L2.25 87.8164L3.23047 89.1602C3.76172 89.9023 4.30469 90.5078 4.41797 90.5078C4.54297 90.5078 5.08984 89.8906 5.64844 89.1484L6.65625 87.7891V92.4648H8.05469V85.6055H6.51562L5.48047 87.0195L4.44531 88.4219L3.42578 87.0195L2.41797 85.6055H0.78125V89.0352Z" fill="#5D2ABC"/>
    <path d="M12.3477 88.9375C11.5234 90.7852 10.8516 92.3242 10.8516 92.3828C10.8516 92.4219 11.1875 92.4648 11.6094 92.4648H12.3633L12.6289 91.8359L12.8828 91.207H16.2539L16.5586 91.8359L16.8672 92.4648H17.6367C18.3789 92.4648 18.3945 92.4531 18.2656 92.1445C18.1836 91.9766 17.5117 90.4492 16.7422 88.7578L15.3711 85.6758L14.6016 85.6328L13.8477 85.5938L12.3477 88.9375ZM15.2305 88.7852L15.7227 89.9453H14.6016C13.7617 89.9453 13.4961 89.9023 13.5508 89.7656C14.0547 88.4766 14.5586 87.4414 14.6289 87.5234C14.6875 87.582 14.9648 88.1523 15.2305 88.7852Z" fill="#5D2ABC"/>
    <path d="M34.2148 89.0352V92.4648H35.6133V85.6055H34.2148V89.0352Z" fill="#5D2ABC"/>
    <path d="M38.9688 89.0352V92.4648H40.3672L40.3984 90.1289L40.4375 87.7891L41.418 89.1484C41.9648 89.8906 42.4961 90.5078 42.6055 90.5078C42.7344 90.5078 43.2773 89.8906 43.8398 89.1484L44.8438 87.7891V92.4648H46.2461V85.6055H44.707L43.8398 86.8086C43.3477 87.4805 42.8867 88.1133 42.8047 88.2227C42.6758 88.4063 42.4688 88.1836 41.6289 87.0195L40.6055 85.6055H38.9688V89.0352Z" fill="#5D2ABC"/>
    <path d="M49.7422 89.0352V92.4648H51.1406V90.5078H52.3711C53.3633 90.5078 53.7148 90.4492 54.2188 90.1836C55.8672 89.3594 55.8672 86.7969 54.2188 85.9297C53.6719 85.6328 53.4336 85.6055 51.6719 85.6055H49.7422V89.0352ZM53.7266 87.3555C54.1758 87.7891 54.1758 88.2813 53.7422 88.7852C53.4336 89.1328 53.3086 89.1758 52.2734 89.2188L51.1406 89.2734V87.0078H52.2578C53.2813 87.0078 53.4219 87.0469 53.7266 87.3555Z" fill="#5D2ABC"/>
    <path d="M68.4883 89.0352V92.4648H69.8867V90.2266H70.4297C70.9492 90.2266 71.0469 90.2969 71.9414 91.332L72.8945 92.4531H73.7734C74.25 92.4648 74.6406 92.4219 74.6406 92.3828C74.6406 92.3242 74.1953 91.8086 73.6641 91.207L72.6836 90.1133L73.1875 89.8477C73.8594 89.4961 74.2227 88.8125 74.2227 87.9023C74.2227 86.9922 73.8164 86.3477 72.9648 85.9141C72.418 85.6328 72.1367 85.6055 70.418 85.6055H68.4883V89.0352ZM72.543 87.2852C72.9492 87.6914 72.9062 88.3203 72.4609 88.6719C72.1523 88.9102 71.8867 88.9648 70.9922 88.9648H69.8867V87.0078H71.0742C72.082 87.0078 72.3047 87.0469 72.543 87.2852Z" fill="#5D2ABC"/>
    <path d="M77.3008 86.2383V86.8672H79.3984V92.4648H80.7969V86.8672H82.8945V85.6055H77.3008V86.2383Z" fill="#5D2ABC"/>
    <path d="M86.8555 88.8125C86.0547 90.5742 85.3711 92.1172 85.3281 92.2422C85.2578 92.4219 85.3555 92.4648 86 92.4648H86.7539L87.3711 91.207H90.7148L90.9961 91.8359L91.2734 92.4648H92.043C92.4766 92.4648 92.8281 92.4531 92.8281 92.4219C92.8281 92.4102 92.1406 90.8828 91.3164 89.0352L89.8047 85.6758L89.0508 85.6328L88.2812 85.5938L86.8555 88.8125ZM89.6641 88.7852L90.1562 89.9453H89.0352C88.4219 89.9453 87.9297 89.8906 87.957 89.8203C88.3633 88.7578 89.0078 87.4688 89.0781 87.5391C89.1328 87.5938 89.3984 88.1523 89.6641 88.7852Z" fill="#5D2ABC"/>
    <path d="M95.7656 89.0234V92.4648H97.1484L97.1914 90.3672L97.2344 88.2656L98.8438 90.3398C100.352 92.2695 100.48 92.3945 100.98 92.4375L101.5 92.4805V85.6055H100.102V89.6797L98.5195 87.6797C96.9688 85.7187 96.9258 85.6758 96.3516 85.6328L95.7656 85.5938V89.0234Z" fill="#5D2ABC"/>
    <path d="M104.438 86.2383V86.8672H106.535V92.4648H107.934V86.8672H110.172V85.6055H104.438V86.2383Z" fill="#5D2ABC"/>
    <path d="M113.109 89.0352V92.4648H118.285V91.0664H114.508V89.6641H118.148V88.4062H114.508V87.0078H118.285V85.6055H113.109V89.0352Z" fill="#5D2ABC"/>
    <path d="M125.84 89.0508V92.4922L127.77 92.4375C129.645 92.3945 129.73 92.3828 130.402 91.9766C131.367 91.375 131.855 90.4063 131.855 89.0508C131.855 87.8867 131.574 87.1602 130.863 86.4727C130.203 85.832 129.309 85.6055 127.422 85.6055H125.84V89.0508ZM129.574 87.2852C130.805 88.0273 130.75 90.1992 129.492 90.8555C129.238 90.9805 128.707 91.0664 128.148 91.0664H127.238V87.0078H128.191C128.875 87.0078 129.254 87.0781 129.574 87.2852Z" fill="#5D2ABC"/>
    <path d="M134.934 89.0352V92.4648H140.109V91.0664H136.332V89.6641H139.969V88.4062H136.332V87.0078H140.109V85.6055H134.934V89.0352Z" fill="#5D2ABC"/>
    <path d="M147.805 89.0352V92.4648H149.203L149.23 90.2109L149.273 87.957L150.18 89.2188C150.684 89.9336 151.188 90.5078 151.312 90.5078C151.453 90.5078 151.973 89.9453 152.504 89.2188L153.469 87.9297L153.512 90.1992L153.539 92.4648H154.938V85.6055H153.426L152.477 86.8945C151.957 87.6094 151.496 88.2383 151.441 88.3086C151.398 88.3633 150.895 87.7773 150.336 87.0078L149.312 85.6055H147.805V89.0352Z" fill="#5D2ABC"/>
    <path d="M158.434 89.0352V92.4648H163.609V91.0664H159.832V89.6641H163.469V88.4062H159.832V87.0078H163.609V85.6055H158.434V89.0352Z" fill="#5D2ABC"/>
    <path d="M166.547 85.7031C166.547 85.7734 167.051 86.5313 167.668 87.4141L168.773 89.0078L168.324 89.6523C168.086 90.0039 167.582 90.7148 167.219 91.2461C166.855 91.7656 166.547 92.2539 166.547 92.3242C166.547 92.4102 166.883 92.4648 167.305 92.4648H168.059L168.871 91.2773C169.316 90.6172 169.723 90.1289 169.777 90.1836C169.82 90.2539 170.199 90.7852 170.59 91.375L171.316 92.4648H172.086C172.73 92.4648 172.855 92.4219 172.785 92.2539C172.746 92.1445 172.242 91.3594 171.652 90.5195L170.605 89.0078L171.668 87.4805C172.254 86.6406 172.773 85.8867 172.801 85.7891C172.855 85.6484 172.66 85.6055 172.086 85.6055H171.305L170.508 86.7969C170.074 87.4531 169.668 87.9453 169.625 87.8867C169.57 87.832 169.191 87.2852 168.801 86.6836L168.074 85.6055H167.316C166.898 85.6055 166.547 85.6484 166.547 85.7031Z" fill="#5D2ABC"/>
    <path d="M175.922 89.0352V92.4648H177.32V85.6055H175.922V89.0352Z" fill="#5D2ABC"/>
    </svg>
      <p>
        COMPROBANTE
        <span>PREINSCRIPCI&Oacute;N</span>
      </p>
    </div>
    <div class="content">
      <br>
      <table width="100%">
        <tr>
          <td width="50%">
            <p>NOMBRE DEL EQUIPO:</p>
            <span>${user._team}</span>
          </td>
          <td width="50%">
            <p>NOMBRE DEL PROTOTIPO:</p>
            <span>${robot._name}</span>
          </td>
        </tr>
        <tr>
          <td width="50%">
            <p>CATEGOR&Iacute;A:</p>
            <span>${robot._category}</span>
          </td>
          <td width="50%">
            <p>COSTO DE INSCRIPCIÓN:</p>
            <span>$ ${robot._price} MXN</span>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <p>CAPIT&Aacute;N:</p>
            <span>${robot._captain.value}</span>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <p>INTEGRANTES DE EQUIPO:</p>
            <span>${robot._member1.value}</span>
            <span>${robot._member2.value}</span>
            <span>${robot._member3.value}</span>
          </td>
        </tr>
        <tr>
          <td>
            <p class="footer">
              Ahora este robot está registrado en el evento de robótica internacional más importante de México.
            </p>
            <p class="footer">
              Imprime este comprobante o descárgalo en tu teléfono y llévalo el día del evento en horario de registro.
            </p>
            <p class="footer">
              Este comprobante sirve también para tu acceso al evento.
            </p>
          </td>
          <td>
            <div class="qr"></div>
          </td>
        </tr>
      </table>
      <br><br><br><br><br>
      <table width="100%" style="text-align:center; color:#999;" class="pie-pag">
        <tr>
          <td colspan="3">Guerra de Robots | © 2020 Rama Estudiantil IEEE UPIITA-IPN</td>
        </tr>
        <tr>
          <td>www.guerraderobots.mx</td>
          <td>corre@ayudita.mx</td>
          <td>Llámanos: 57296000 Ext. 56913</td>
        </tr>
      </table>
        </body>
        </html>
        `
        var flag = false
        pdf.create(content).toFile('./public/vouchers/' + robot._id +'.pdf', (err, res) =>{ 
          if (err) flag = true
        })
        if(flag == true) res.json({ status: 400 })
        else res.json({ status: 200 })
    } else res.json({ status: 404 })
})

router.get('/data', isAuth, async(req, res) => {
    const robots = await Robot.find({ _leader: req.user._id})
    if(robots) res.json(robots)
    else res.json({ status: 404 })
})

router.get('/data/:id', isAuth, async(req, res) =>{
    const robot = await Robot.findOne({ _id: req.params.id})
    if(robot){ 
        if(robot._leader == req.user._id) res.json(robot)
        else res.json({ status: 401 })
    } else res.json({ status: 404 })
})

router.post('/create', isAuth, async(req, res) => {
    const { name, price, category, captain, m1, m2, m3, idc, id1, id2, id3 } = req.body
    const robot = await Robot.findOne({ _name: name })

    if(!robot){
        var prototype
        if(req.file) prototype = '/prototypes/' + req.file.filename
        else prototype = ''
        const newRobot = new Robot({ 
            _leader: req.user._id,
            _name: name,
            _category: category,
            _price: price,
            _status: 'Sin registrar',
            _prototype: prototype,
            _payment: '',
            _captain: { key: idc, value: captain },
            _member1: { key: id1, value: m1 },
            _member2: { key: id2, value: m2 },
            _member3: { key: id3, value: m3 }
            // _idMember: id
        })
        await newRobot.save()
        if(idc != '') await Member.findOneAndUpdate({_id : idc}, {$inc : {_robots : 1}})
        if(id1 != '') await Member.findOneAndUpdate({_id : id1}, {$inc : {_robots : 1}})
        if(id2 != '') await Member.findOneAndUpdate({_id : id2}, {$inc : {_robots : 1}})
        if(id3 != '') await Member.findOneAndUpdate({_id : id3}, {$inc : {_robots : 1}})
        res.json({ status: 200 })
    } else res.json({ status: 403 })
})

router.put('/update/:id', isAuth, async(req, res) => {
    const { name, price, category, captain, m1, m2, m3, idc, id1, id2, id3 } = req.body
    const robot = await Robot.findOne({ _id: req.params.id })
    
    if(!robot) res.json({ status: 404 })
    else{
        var prototype
        if(req.file && robot._prototype == ''){
            prototype = '/prototypes/' + req.file.filename
        } else if(req.file && robot._prototype != ''){
            unlink(path.resolve('./public'+ robot._prototype))
            prototype = '/prototypes/' + req.file.filename
        } else prototype = ''

        if(robot._leader == req.user._id){
            const repeat = await Robot.findOne({ _name: name })
            if(!repeat || robot._name == name){
                if(robot._captain.key != '') await Member.findOneAndUpdate({_id : robot._captain.key}, {$inc : {_robots : -1}})
                if(robot._member1.key != '') await Member.findOneAndUpdate({_id : robot._member1.key}, {$inc : {_robots : -1}})
                if(robot._member2.key != '') await Member.findOneAndUpdate({_id : robot._member2.key}, {$inc : {_robots : -1}})
                if(robot._member3.key != '') await Member.findOneAndUpdate({_id : robot._member3.key}, {$inc : {_robots : -1}})

                if(idc != '') await Member.findOneAndUpdate({_id : idc}, {$inc : {_robots : 1}})
                if(id1 != '') await Member.findOneAndUpdate({_id : id1}, {$inc : {_robots : 1}})
                if(id2 != '') await Member.findOneAndUpdate({_id : id2}, {$inc : {_robots : 1}})
                if(id3 != '') await Member.findOneAndUpdate({_id : id3}, {$inc : {_robots : 1}})

                await Robot.findOneAndUpdate({ _id: req.params.id }, {
                    _name: name,
                    _price: price,
                    _category: category,
                    _prototype: prototype,
                    _captain: { key: idc, value: captain },
                    _member1: { key: id1, value: m1 },
                    _member2: { key: id2, value: m2 },
                    _member3: { key: id3, value: m3 }
                })
                res.json({ status: 200 })
            } else res.json({ status: 403 })
        } else res.json({ status: 401 })
    }
})

router.put('/regist/:id', async(req, res) =>{
    const robot = await Robot.findOne({ _id: req.params.id })
    if(robot){
        if(robot._leader == req.user._id){
            await Robot.findByIdAndUpdate(
            { _id: req.params.id }, 
            { _status: 'Pre registrado' })
            if(robot._captain.key != '') await Member.findByIdAndUpdate({ _id: robot._captain.key }, { _status: 'Participante' })
            if(robot._member1.key != '') await Member.findByIdAndUpdate({ _id: robot._member1.key }, { _status: 'Participante' })
            if(robot._member2.key != '') await Member.findByIdAndUpdate({ _id: robot._member2.key }, { _status: 'Participante' })
            if(robot._member3.key != '') await Member.findByIdAndUpdate({ _id: robot._member3.key }, { _status: 'Participante' })
            res.json({ status: 200 })
        } else res.json({ status: 401 })
    } else res.json({ status: 404 })
})

router.delete('/delete/:id', isAuth, async(req, res) => {
    const robot = await Robot.findOne({ _id: req.params.id })
    if(robot){ 
        if(robot._leader == req.user._id){
            unlink(path.resolve('./public'+ robot._prototype))
            if(robot._captain.key != '') await Member.findOneAndUpdate({_id : robot._captain.key}, {$inc : {_robots : -1}})
            if(robot._member1.key != '') await Member.findOneAndUpdate({_id : robot._member1.key}, {$inc : {_robots : -1}})
            if(robot._member2.key != '') await Member.findOneAndUpdate({_id : robot._member2.key}, {$inc : {_robots : -1}})
            if(robot._member3.key != '') await Member.findOneAndUpdate({_id : robot._member3.key}, {$inc : {_robots : -1}})

            await Robot.findByIdAndDelete(req.params.id)
            res.json({ status: 200 })
        } else res.json({ status: 401 })
    } else res.json({ status: 404 })
})

module.exports = router

// router.post('/create', isAuth, async(req, res) => {
//     const { name, price, category, captain, m1, m2, m3, idc, id1, id2, id3 } = req.body
//     var prototype
//     if(req.file) prototype = '/prototypes/' + req.file.filename
//     else prototype = ''

//     const robot = await Robot.findOne({ _name: name })
//     if(robot) res.json({ status: 400 })
//     else{
//         var members = [], id = []
//         if(captain != 'Yo') id.push(idc)
//         if(m1 != 'Selecciona una opción'){
//             members.push(m1)
//             if(m1 != 'Yo') id.push(id1)
//         }
//         if(m2 != 'Selecciona una opción'){
//             members.push(m2)
//             if(m2 != 'Yo') id.push(id2)
//         }
//         if(m3 != 'Selecciona una opción'){
//             members.push(m3)
//             if(m3 != 'Yo') id.push(id3)
//         }
//         for(var i = 0; i < id.length; i++){
//             member = await Member.findOne({ _id: id[i] })
//             if(member) await Member.findByIdAndUpdate( { _id: id[i] }, 
//                 { _robots: member._robots + 1 })
//         }

//         const newRobot = new Robot({ 
//             _leader: req.user._id,
//             _captain: captain,
//             _name: name,
//             _category: category,
//             _price: price,
//             _status: 'Sin registrar',
//             _payment: '',
//             _members: members,
//             _prototype: prototype,
//             _idMember: id
//         })
//         await newRobot.save()
//         res.json({ status: 200 })
//     }
// })

// router.put('/update/:id', isAuth, async(req, res) => {
//     const { name, price, category, captain, m1, m2, m3, idc, id1, id2, id3 } = req.body

//     const robot = await Robot.findOne({ _id: req.params.id })
//     if(!robot) res.json({ status: 404 })
//     else{
//         var prototype
//         if(req.file && robot._prototype == ''){
//             prototype = '/prototypes/' + req.file.filename
//         } else if(req.file && robot._prototype != ''){
//             unlink(path.resolve('./public'+ robot._prototype))
//             prototype = '/prototypes/' + req.file.filename
//         } else prototype = ''

//         if(robot._leader == req.user._id){
//             const members = [], id = []
    
//             if(captain != 'Yo') id.push(idc)
//             if(m1 != 'Selecciona una opción'){
//                 members.push(m1)
//                 if(m1 != 'Yo') id.push(id1)
//             }
//             if(m2 != 'Selecciona una opción'){
//                 members.push(m2)
//                 if(m2 != 'Yo') id.push(id2)
//             }
//             if(m3 != 'Selecciona una opción'){
//                 members.push(m3)
//                 if(m3 != 'Yo') id.push(id3)
//             }

//             for(var i = 0; i < robot._idMember.length; i++){
//                 member = await Member.findOne({ _id: robot._idMember[i] })
//                 if(member) await Member.findByIdAndUpdate( { _id: robot._idMember[i] }, 
//                     { _robots: member._robots - 1 })
//             }
    
//             for(var i = 0; i < id.length; i++){
//                 member = await Member.findOne({ _id: id[i] })
//                 if(member) await Member.findByIdAndUpdate( { _id: id[i] }, 
//                     { _robots: member._robots + 1 })
//             }

//             const repeat = await Robot.findOne({ _name: name })
//             if(repeat && robot._name != name) {
//                 res.json({ status: 400 })
//             } else{
//                 await Robot.findOneAndUpdate({ _id: req.params.id }, {
//                     _leader: req.user._id,
//                     _captain: captain,
//                     _name: name,
//                     _category: category,
//                     // _payment: '',
//                     _prototype: prototype,
//                     _members: members,
//                     _idMember: id,
//                     _price: price
//                 })
//                 res.json({ status: 200 })
//             }
//         } else res.json({ status: 401 })
//     }
// })

// router.put('/regist/:id', async(req, res) =>{
//     const robot = await Robot.findOne({ _id: req.params.id })
//     if(robot){
//         if(robot._leader == req.user._id){
//             await Robot.findByIdAndUpdate(
//             { _id: req.params.id }, 
//             { _status: 'Pre registrado' })

//             for(var i = 0; i < robot._idMember.length; i++){
//                 await Member.findByIdAndUpdate(
//                 { _id:  robot._idMember[i]}, 
//                 { _status: 'Participante' })
//             }
            
//             res.json({ status: 200 })
//         } else res.json({ status: 401 })
//     } else res.json({ status: 404 })
// })

// router.delete('/delete/:id', isAuth, async(req, res) => {
//     const robot = await Robot.findOne({ _id: req.params.id })
//     if(robot){ 
//         if(robot._leader == req.user._id){
//             unlink(path.resolve('./public'+ robot._prototype))
//             await Robot.findByIdAndDelete(req.params.id)
//             res.json({ status: 200 })
//         } else res.json({ status: 401 })
//     } else res.json({ status: 404 })
// })

// router.put('/substract/:id', isAuth, async(req, res) => {
//     const robot = await Robot.findOne({ _id: req.params.id })
//     if(robot){ 
//         if(robot._leader == req.user._id){
//             for(var i = 0; i < robot._idMember.length; i++){
//                 member = await Member.findOne({ _id: robot._idMember[i] })
//                 if(member) await Member.findByIdAndUpdate( { _id: robot._idMember[i] }, 
//                     { _robots: member._robots - 1 })
//             }
//             res.json({ status: 200 })
//         } else res.json({ status: 401 })
//     } else res.json({ status: 404 })
// })